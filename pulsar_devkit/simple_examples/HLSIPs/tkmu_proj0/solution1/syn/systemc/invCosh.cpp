// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "invCosh.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic invCosh::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic invCosh::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> invCosh::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> invCosh::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> invCosh::ap_const_lv1_1 = "1";
const sc_lv<13> invCosh::ap_const_lv13_0 = "0000000000000";
const sc_lv<51> invCosh::ap_const_lv51_2AAAAAB = "10101010101010101010101011";
const sc_lv<32> invCosh::ap_const_lv32_1B = "11011";
const sc_lv<32> invCosh::ap_const_lv32_32 = "110010";
const sc_lv<26> invCosh::ap_const_lv26_800000 = "100000000000000000000000";
const sc_lv<32> invCosh::ap_const_lv32_A = "1010";
const sc_lv<32> invCosh::ap_const_lv32_19 = "11001";
const sc_lv<10> invCosh::ap_const_lv10_0 = "0000000000";
const sc_lv<17> invCosh::ap_const_lv17_1 = "1";
const sc_lv<32> invCosh::ap_const_lv32_1F = "11111";
const sc_lv<32> invCosh::ap_const_lv32_D = "1101";
const sc_lv<19> invCosh::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<17> invCosh::ap_const_lv17_10000 = "10000000000000000";
const sc_lv<17> invCosh::ap_const_lv17_196F = "1100101101111";

invCosh::invCosh(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cosh_table1_U = new invCosh_cosh_table1("cosh_table1_U");
    cosh_table1_U->clk(ap_clk);
    cosh_table1_U->reset(ap_rst);
    cosh_table1_U->address0(cosh_table1_address0);
    cosh_table1_U->ce0(cosh_table1_ce0);
    cosh_table1_U->q0(cosh_table1_q0);
    tkmu_simple_hw_mulbW_U22 = new tkmu_simple_hw_mulbW<1,5,27,25,51>("tkmu_simple_hw_mulbW_U22");
    tkmu_simple_hw_mulbW_U22->clk(ap_clk);
    tkmu_simple_hw_mulbW_U22->reset(ap_rst);
    tkmu_simple_hw_mulbW_U22->din0(grp_fu_90_p0);
    tkmu_simple_hw_mulbW_U22->din1(grp_fu_90_p1);
    tkmu_simple_hw_mulbW_U22->ce(ap_var_for_const0);
    tkmu_simple_hw_mulbW_U22->dout(grp_fu_90_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_pipeline_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( cosh_table1_q0 );
    sensitive << ( tmp_200_fu_222_p2 );
    sensitive << ( sel_tmp_fu_214_p3 );

    SC_METHOD(thread_cosh_table1_address0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_195_fu_200_p1 );

    SC_METHOD(thread_cosh_table1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_grp_fu_90_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_90_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_fu_90_p10 );

    SC_METHOD(thread_grp_fu_90_p10);
    sensitive << ( r_V_tr_fu_78_p3 );

    SC_METHOD(thread_icmp_fu_195_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_238_reg_256 );

    SC_METHOD(thread_index_fu_169_p3);
    sensitive << ( tmp_199_fu_153_p1 );
    sensitive << ( tmp_235_fu_129_p3 );
    sensitive << ( tmp_202_fu_161_p3 );

    SC_METHOD(thread_r_V_fu_109_p2);
    sensitive << ( tmp_fu_106_p1 );

    SC_METHOD(thread_r_V_tr_fu_78_p3);
    sensitive << ( data_V_read );

    SC_METHOD(thread_ret_V_cast_fu_125_p1);
    sensitive << ( tmp_198_fu_115_p4 );

    SC_METHOD(thread_ret_V_fu_147_p2);
    sensitive << ( ret_V_cast_fu_125_p1 );

    SC_METHOD(thread_sel_tmp1_fu_204_p2);
    sensitive << ( ap_pipeline_reg_pp0_iter6_tmp_237_reg_250 );

    SC_METHOD(thread_sel_tmp2_fu_209_p2);
    sensitive << ( icmp_reg_261 );
    sensitive << ( sel_tmp1_fu_204_p2 );

    SC_METHOD(thread_sel_tmp_fu_214_p3);
    sensitive << ( sel_tmp2_fu_209_p2 );

    SC_METHOD(thread_tmp_195_fu_200_p1);
    sensitive << ( index_reg_245 );

    SC_METHOD(thread_tmp_198_fu_115_p4);
    sensitive << ( r_V_fu_109_p2 );

    SC_METHOD(thread_tmp_199_fu_153_p1);
    sensitive << ( tmp_198_fu_115_p4 );

    SC_METHOD(thread_tmp_200_fu_222_p2);
    sensitive << ( ap_pipeline_reg_pp0_iter6_tmp_237_reg_250 );
    sensitive << ( sel_tmp2_fu_209_p2 );

    SC_METHOD(thread_tmp_201_fu_157_p1);
    sensitive << ( ret_V_fu_147_p2 );

    SC_METHOD(thread_tmp_202_fu_161_p3);
    sensitive << ( tmp_s_fu_141_p2 );
    sensitive << ( tmp_199_fu_153_p1 );
    sensitive << ( tmp_201_fu_157_p1 );

    SC_METHOD(thread_tmp_235_fu_129_p3);
    sensitive << ( r_V_fu_109_p2 );

    SC_METHOD(thread_tmp_236_fu_137_p1);
    sensitive << ( r_V_fu_109_p2 );

    SC_METHOD(thread_tmp_fu_106_p1);
    sensitive << ( tmp_234_reg_240 );

    SC_METHOD(thread_tmp_s_fu_141_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_236_fu_137_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_pipeline_idle_pp0 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "invCosh_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_read, "(port)data_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, cosh_table1_address0, "cosh_table1_address0");
    sc_trace(mVcdFile, cosh_table1_ce0, "cosh_table1_ce0");
    sc_trace(mVcdFile, cosh_table1_q0, "cosh_table1_q0");
    sc_trace(mVcdFile, tmp_234_reg_240, "tmp_234_reg_240");
    sc_trace(mVcdFile, index_fu_169_p3, "index_fu_169_p3");
    sc_trace(mVcdFile, index_reg_245, "index_reg_245");
    sc_trace(mVcdFile, tmp_237_reg_250, "tmp_237_reg_250");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_tmp_237_reg_250, "ap_pipeline_reg_pp0_iter6_tmp_237_reg_250");
    sc_trace(mVcdFile, tmp_238_reg_256, "tmp_238_reg_256");
    sc_trace(mVcdFile, icmp_fu_195_p2, "icmp_fu_195_p2");
    sc_trace(mVcdFile, icmp_reg_261, "icmp_reg_261");
    sc_trace(mVcdFile, tmp_195_fu_200_p1, "tmp_195_fu_200_p1");
    sc_trace(mVcdFile, r_V_tr_fu_78_p3, "r_V_tr_fu_78_p3");
    sc_trace(mVcdFile, grp_fu_90_p0, "grp_fu_90_p0");
    sc_trace(mVcdFile, grp_fu_90_p1, "grp_fu_90_p1");
    sc_trace(mVcdFile, grp_fu_90_p2, "grp_fu_90_p2");
    sc_trace(mVcdFile, tmp_fu_106_p1, "tmp_fu_106_p1");
    sc_trace(mVcdFile, r_V_fu_109_p2, "r_V_fu_109_p2");
    sc_trace(mVcdFile, tmp_198_fu_115_p4, "tmp_198_fu_115_p4");
    sc_trace(mVcdFile, tmp_236_fu_137_p1, "tmp_236_fu_137_p1");
    sc_trace(mVcdFile, ret_V_cast_fu_125_p1, "ret_V_cast_fu_125_p1");
    sc_trace(mVcdFile, ret_V_fu_147_p2, "ret_V_fu_147_p2");
    sc_trace(mVcdFile, tmp_s_fu_141_p2, "tmp_s_fu_141_p2");
    sc_trace(mVcdFile, tmp_199_fu_153_p1, "tmp_199_fu_153_p1");
    sc_trace(mVcdFile, tmp_201_fu_157_p1, "tmp_201_fu_157_p1");
    sc_trace(mVcdFile, tmp_235_fu_129_p3, "tmp_235_fu_129_p3");
    sc_trace(mVcdFile, tmp_202_fu_161_p3, "tmp_202_fu_161_p3");
    sc_trace(mVcdFile, sel_tmp1_fu_204_p2, "sel_tmp1_fu_204_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_209_p2, "sel_tmp2_fu_209_p2");
    sc_trace(mVcdFile, tmp_200_fu_222_p2, "tmp_200_fu_222_p2");
    sc_trace(mVcdFile, sel_tmp_fu_214_p3, "sel_tmp_fu_214_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_pipeline_idle_pp0, "ap_pipeline_idle_pp0");
    sc_trace(mVcdFile, grp_fu_90_p10, "grp_fu_90_p10");
#endif

    }
}

invCosh::~invCosh() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cosh_table1_U;
    delete tkmu_simple_hw_mulbW_U22;
}

void invCosh::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void invCosh::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        ap_pipeline_reg_pp0_iter6_tmp_237_reg_250 = tmp_237_reg_250.read();
        icmp_reg_261 = icmp_fu_195_p2.read();
        index_reg_245 = index_fu_169_p3.read();
        tmp_234_reg_240 = grp_fu_90_p2.read().range(50, 27);
        tmp_237_reg_250 = index_fu_169_p3.read().range(31, 31);
        tmp_238_reg_256 = index_fu_169_p3.read().range(31, 13);
    }
}

void invCosh::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(0, 0);
}

void invCosh::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void invCosh::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void invCosh::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void invCosh::thread_ap_pipeline_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_pipeline_idle_pp0 = ap_const_logic_1;
    } else {
        ap_pipeline_idle_pp0 = ap_const_logic_0;
    }
}

void invCosh::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void invCosh::thread_ap_return() {
    ap_return = (!tmp_200_fu_222_p2.read()[0].is_01())? sc_lv<17>(): ((tmp_200_fu_222_p2.read()[0].to_bool())? sel_tmp_fu_214_p3.read(): cosh_table1_q0.read());
}

void invCosh::thread_cosh_table1_address0() {
    cosh_table1_address0 =  (sc_lv<13>) (tmp_195_fu_200_p1.read());
}

void invCosh::thread_cosh_table1_ce0() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        cosh_table1_ce0 = ap_const_logic_1;
    } else {
        cosh_table1_ce0 = ap_const_logic_0;
    }
}

void invCosh::thread_grp_fu_90_p0() {
    grp_fu_90_p0 =  (sc_lv<27>) (ap_const_lv51_2AAAAAB);
}

void invCosh::thread_grp_fu_90_p1() {
    grp_fu_90_p1 =  (sc_lv<25>) (grp_fu_90_p10.read());
}

void invCosh::thread_grp_fu_90_p10() {
    grp_fu_90_p10 = esl_zext<51,25>(r_V_tr_fu_78_p3.read());
}

void invCosh::thread_icmp_fu_195_p2() {
    icmp_fu_195_p2 = (!tmp_238_reg_256.read().is_01() || !ap_const_lv19_0.is_01())? sc_lv<1>(): (sc_bigint<19>(tmp_238_reg_256.read()) > sc_bigint<19>(ap_const_lv19_0));
}

void invCosh::thread_index_fu_169_p3() {
    index_fu_169_p3 = (!tmp_235_fu_129_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_235_fu_129_p3.read()[0].to_bool())? tmp_202_fu_161_p3.read(): tmp_199_fu_153_p1.read());
}

void invCosh::thread_r_V_fu_109_p2() {
    r_V_fu_109_p2 = (!ap_const_lv26_800000.is_01() || !tmp_fu_106_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(ap_const_lv26_800000) - sc_biguint<26>(tmp_fu_106_p1.read()));
}

void invCosh::thread_r_V_tr_fu_78_p3() {
    r_V_tr_fu_78_p3 = esl_concat<12,13>(data_V_read.read(), ap_const_lv13_0);
}

void invCosh::thread_ret_V_cast_fu_125_p1() {
    ret_V_cast_fu_125_p1 = esl_sext<17,16>(tmp_198_fu_115_p4.read());
}

void invCosh::thread_ret_V_fu_147_p2() {
    ret_V_fu_147_p2 = (!ap_const_lv17_1.is_01() || !ret_V_cast_fu_125_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_1) + sc_bigint<17>(ret_V_cast_fu_125_p1.read()));
}

void invCosh::thread_sel_tmp1_fu_204_p2() {
    sel_tmp1_fu_204_p2 = (ap_pipeline_reg_pp0_iter6_tmp_237_reg_250.read() ^ ap_const_lv1_1);
}

void invCosh::thread_sel_tmp2_fu_209_p2() {
    sel_tmp2_fu_209_p2 = (icmp_reg_261.read() & sel_tmp1_fu_204_p2.read());
}

void invCosh::thread_sel_tmp_fu_214_p3() {
    sel_tmp_fu_214_p3 = (!sel_tmp2_fu_209_p2.read()[0].is_01())? sc_lv<17>(): ((sel_tmp2_fu_209_p2.read()[0].to_bool())? ap_const_lv17_10000: ap_const_lv17_196F);
}

void invCosh::thread_tmp_195_fu_200_p1() {
    tmp_195_fu_200_p1 = esl_zext<64,32>(index_reg_245.read());
}

void invCosh::thread_tmp_198_fu_115_p4() {
    tmp_198_fu_115_p4 = r_V_fu_109_p2.read().range(25, 10);
}

void invCosh::thread_tmp_199_fu_153_p1() {
    tmp_199_fu_153_p1 = esl_sext<32,16>(tmp_198_fu_115_p4.read());
}

void invCosh::thread_tmp_200_fu_222_p2() {
    tmp_200_fu_222_p2 = (sel_tmp2_fu_209_p2.read() | ap_pipeline_reg_pp0_iter6_tmp_237_reg_250.read());
}

void invCosh::thread_tmp_201_fu_157_p1() {
    tmp_201_fu_157_p1 = esl_sext<32,17>(ret_V_fu_147_p2.read());
}

void invCosh::thread_tmp_202_fu_161_p3() {
    tmp_202_fu_161_p3 = (!tmp_s_fu_141_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_s_fu_141_p2.read()[0].to_bool())? tmp_199_fu_153_p1.read(): tmp_201_fu_157_p1.read());
}

void invCosh::thread_tmp_235_fu_129_p3() {
    tmp_235_fu_129_p3 = r_V_fu_109_p2.read().range(25, 25);
}

void invCosh::thread_tmp_236_fu_137_p1() {
    tmp_236_fu_137_p1 = r_V_fu_109_p2.read().range(10-1, 0);
}

void invCosh::thread_tmp_fu_106_p1() {
    tmp_fu_106_p1 = esl_zext<26,24>(tmp_234_reg_240.read());
}

void invCosh::thread_tmp_s_fu_141_p2() {
    tmp_s_fu_141_p2 = (!tmp_236_fu_137_p1.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_236_fu_137_p1.read() == ap_const_lv10_0);
}

void invCosh::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

